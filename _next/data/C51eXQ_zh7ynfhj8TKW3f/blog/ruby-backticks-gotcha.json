{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var o=Object.create;var l=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=s=>l(s,\"__esModule\",{value:!0});var N=(s,a)=>()=>(a||s((a={exports:{}}).exports,a),a.exports),u=(s,a)=>{r(s);for(var c in a)l(s,c,{get:a[c],enumerable:!0})},g=(s,a,c)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let n of h(a))!m.call(s,n)&&n!==\"default\"&&l(s,n,{get:()=>a[n],enumerable:!(c=d(a,n))||c.enumerable});return s},k=s=>g(r(l(s!=null?o(p(s)):{},\"default\",s&&s.__esModule&&\"default\"in s?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s);var t=N((E,i)=>{i.exports=_jsx_runtime});var w={};u(w,{default:()=>f,frontmatter:()=>b});var e=k(t()),b={title:\"A nasty `ruby` gotcha for node.js developers\",date:\"2022-12-22\",tags:[\"ruby\",\"til\",\"rspec\",\"testing\",\"node.js\",\"ecmascript\"],draft:!1,summary:\"Ruby uses backticks for subshell commands, not strings\",images:[],layout:\"PostLayout\"};function y(s={}){let{wrapper:a}=s.components||{};return a?(0,e.jsx)(a,Object.assign({},s,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({p:\"p\",blockquote:\"blockquote\",code:\"code\",a:\"a\",pre:\"pre\",span:\"span\",h2:\"h2\"},s.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"A difference in how ruby and node.js treat backticks presents a tempting pitfall for developers writing ruby tests.\"}),(0,e.jsx)(n.blockquote,{children:(0,e.jsxs)(n.p,{children:[\"TL;DR: If you need to preserve line breaks in a ruby string, use a squiggly \",(0,e.jsx)(n.code,{children:\"<<~HEREDOC.strip\"}),\". If you are trying to test around annoying line breaks in Rails, try \",(0,e.jsx)(n.code,{children:\"String#squish\"}),\".\"]})}),(0,e.jsxs)(n.p,{children:[\"Developers working in the Node.js/ECMAScript universe are familiar with the language's \",(0,e.jsx)(n.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\",children:\"template string literals\"}),\". One feature that has made them so popular, even when string interpolation is not needed, is the ability to preserve line breaks:\"]}),(0,e.jsx)(n.pre,{className:\"language-ts\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-ts\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" result \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'Your order\\\\nis ready'\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" expected \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token string template-punctuation\",children:\"`\"}),(0,e.jsx)(n.span,{className:\"token string\",children:`You're order\n`})]})]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token string\",children:\"is ready\"}),(0,e.jsx)(n.span,{className:\"token string template-punctuation\",children:\"`\"})]}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"result\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"includes\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// => false\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"In ruby however, \",(0,e.jsx)(n.a,{href:\"https://ruby-doc.org/3.1.3/Kernel.html#method-i-60\",children:\"backticks are a shorthand for running a script\"}),\" in a shell and returning its output to STDOUT as a string:\"]}),(0,e.jsx)(n.pre,{className:\"language-rb\",children:(0,e.jsxs)(n.code,{className:\"language-rb code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"my_files \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token command-literal\",children:(0,e.jsx)(n.span,{className:\"token string command\",children:\"`ls ~`\"})}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:'# => \"Applications\\\\nDesktop\\\\nDocuments\\\\nDownloads\\\\n ...'}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"If the script errors, the backticked method exits and returns \",(0,e.jsx)(n.code,{children:\"nil\"}),\", but adding a line break obscures this behavior, returning an empty string (nothing was sent to STDOUT) instead:\"]}),(0,e.jsx)(n.pre,{className:\"language-rb\",children:(0,e.jsxs)(n.code,{className:\"language-rb code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"x \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token command-literal\",children:(0,e.jsx)(n.span,{className:\"token string command\",children:\"`Your order`\"})}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# Errno::ENOENT: No such file or directory - Your\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`x\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# => nil\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"expected \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" `Your order\\n\"]}),(0,e.jsx)(n.span,{className:\"code-line\",children:\"is ready`\\n\"}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# sh: Your: command not found\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# sh: line 1: is: command not found\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:'# => \"\"'}),`\n`]})]})}),(0,e.jsx)(n.p,{children:\"If you are accustomed to using this backticked behavior to test strings with line breaks, these quirks can combine to hide false positives in tests:\"}),(0,e.jsx)(n.pre,{className:\"language-rb\",children:(0,e.jsxs)(n.code,{className:\"language-rb code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"expected \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" `Your order\\n\"]}),(0,e.jsx)(n.span,{className:\"code-line\",children:\"is ready`\\n\"}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token string-literal\",children:(0,e.jsx)(n.span,{className:\"token string\",children:`\"You're order\\\\nis ready\"`})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"include\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"?\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# => true\"}),`\n`]})]})}),(0,e.jsxs)(n.h2,{id:\"testing-multiline-strings-in-ruby\",children:[(0,e.jsx)(n.a,{href:\"#testing-multiline-strings-in-ruby\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Testing multiline strings in ruby\"]}),(0,e.jsxs)(n.p,{children:[\"Ruby's (uglier, more awkward) method for a case like this is to use its \",(0,e.jsx)(n.a,{href:\"https://www.rubyguides.com/2018/11/ruby-heredoc/\",children:\"HEREDOC format\"}),\":\"]}),(0,e.jsx)(n.pre,{className:\"language-rb\",children:(0,e.jsxs)(n.code,{className:\"language-rb code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"expected \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsxs)(n.span,{className:\"token string-literal heredoc-string\",children:[(0,e.jsxs)(n.span,{className:\"token delimiter\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<<~\"}),(0,e.jsx)(n.span,{className:\"token symbol\",children:\"HERE\"})]}),(0,e.jsx)(n.span,{className:\"token string\",children:`\n`})]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token string-literal heredoc-string\",children:(0,e.jsx)(n.span,{className:\"token string\",children:`  Your order\n`})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token string-literal heredoc-string\",children:(0,e.jsx)(n.span,{className:\"token string\",children:`  is ready\n`})})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token string-literal heredoc-string\",children:[(0,e.jsx)(n.span,{className:\"token string\"}),(0,e.jsx)(n.span,{className:\"token delimiter\",children:(0,e.jsx)(n.span,{className:\"token symbol\",children:\"HERE\"})})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:'# => \"Your order\\\\nis ready\\\\n\"'}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# Again without the final newline:\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"expected \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<<\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"~\"}),(0,e.jsx)(n.span,{className:\"token constant\",children:\"HERE\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),`strip\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  Your order\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  is ready\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token constant\",children:\"HERE\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:'# => \"Your order\\\\nis ready\"'}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# Finally our test is working\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token string-literal\",children:(0,e.jsx)(n.span,{className:\"token string\",children:`\"You're order\\\\nis ready\"`})}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"include\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"?\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# => false\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"Depending on your testing needs, there are other ways to get around this. In rails for example \",(0,e.jsx)(n.a,{href:\"https://apidock.com/rails/String/squish\",children:\"String#squish\"}),\" will convert all successive whitespaces in a string to a single space.\"]}),(0,e.jsx)(n.pre,{className:\"language-rb\",children:(0,e.jsxs)(n.code,{className:\"language-rb code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"actual \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string-literal\",children:(0,e.jsx)(n.span,{className:\"token string\",children:'\"Your order\\\\nis ready\"'})}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"expected \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token string-literal\",children:(0,e.jsx)(n.span,{className:\"token string\",children:'\"Your order is ready\"'})}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"test_subject \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" actual\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),`squish\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"test_subject\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"include\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"?\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"expected\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"# => true\"}),`\n`]})]})})]})}}var f=y;return w;})();\n;return Component;","toc":[{"value":"Testing multiline strings in ruby","url":"#testing-multiline-strings-in-ruby","depth":2}],"frontMatter":{"readingTime":{"text":"3 min read","minutes":2.455,"time":147300,"words":491},"slug":"ruby-backticks-gotcha","fileName":"ruby-backticks-gotcha.mdx","title":"A nasty `ruby` gotcha for node.js developers","date":"2022-12-22T00:00:00.000Z","tags":["ruby","til","rspec","testing","node.js","ecmascript"],"draft":false,"summary":"Ruby uses backticks for subshell commands, not strings","images":[],"layout":"PostLayout"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.375,"time":22500,"words":75},"slug":"default","fileName":"default.md","name":"Erik Stockmeier","avatar":"/static/images/avatar.jpeg","occupation":"Software engineer","email":"email@erikstockmeier.com","twitter":"https://twitter.com/iamerikonline","linkedin":"https://www.linkedin.com/in/erikdstock","github":"https://github.com/erikdstock","mastodon":"https://mastodon.social/@microchungus","date":null}],"prev":{"title":"I messed up my computer again.","date":"2022-12-12T00:00:00.000Z","tags":["homebrew","macOS"],"summary":"I somehow deleted the contents of /usr/local/bin 😬","images":[],"layout":"PostLayout","slug":"i-messed-up-my-computer"},"next":null},"__N_SSG":true}